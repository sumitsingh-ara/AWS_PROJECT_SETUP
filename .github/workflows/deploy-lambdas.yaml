name: Deploy Lambda Functions

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli jq

      - name: Check if Lambda function exists
        id: check_function
        run: |
          function_name="sum"
          aws lambda get-function --function-name "$function_name" | jq '.Configuration.FunctionArn' || echo "::set-output name=exists::false"

      - name: Deploy Lambda Function
        if: steps.check_function.outputs.exists == 'false'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-south-1
        run: |
          file="sum.js"
          function_name=$(basename "$file" .js)
          zip -r "${function_name}.zip" "$file"  # Create zip file
          aws lambda create-function \
            --function-name "$function_name" \
            --runtime nodejs16.x \
            --role arn:aws:iam::533267423509:role/lambda-s3-dyanmodb-full-access \
            --handler "${function_name}.handler" \
            --zip-file "fileb://${function_name}.zip"  # Specify zip file

      - name: Update Lambda Function
        if: steps.check_function.outputs.exists != 'false'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-south-1
        run: |
          file="sum.js"
          function_name=$(basename "$file" .js)
          zip -r "${function_name}.zip" "$file"  # Create zip file
          aws lambda update-function-code \
            --function-name "$function_name" \
            --runtime nodejs16.x \
            --zip-file "fileb://${function_name}.zip"  # Specify zip file
